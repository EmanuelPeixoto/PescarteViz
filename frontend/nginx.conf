worker_processes auto;
worker_rlimit_nofile 2048;

events {
  worker_connections 1024;
}

http {
  resolver 127.0.0.11 valid=30s;
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  upstream backend {
    least_conn;
    server backend:3001 max_fails=3 fail_timeout=30s;
    keepalive 32;
  }

  server {
    listen 443 ssl;
    server_name localhost;

    ssl_certificate /etc/nginx/certs/fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE+AESGCM:ECDHE+CHACHA20:DHE+AESGCM:DHE+CHACHA20:!aNULL:!MD5:!DSS;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;

    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options DENY always;
    add_header Referrer-Policy strict-origin-when-cross-origin always;

    # Unified and strict CSP
    set $csp "default-src 'self'; ";
    set $csp "${csp}script-src 'self' 'unsafe-inline' https://cdnjs.cloudflare.com; ";
    set $csp "${csp}style-src 'self' 'unsafe-inline' https://cdnjs.cloudflare.com; ";
    set $csp "${csp}img-src 'self' data: blob: https://*.tile.openstreetmap.org https://raw.githubusercontent.com https://cdnjs.cloudflare.com; ";
    set $csp "${csp}font-src 'self' https://cdnjs.cloudflare.com; ";
    set $csp "${csp}connect-src 'self' https://*.tile.openstreetmap.org; ";
    set $csp "${csp}object-src 'none'; ";
    set $csp "${csp}base-uri 'self'; ";
    set $csp "${csp}frame-ancestors 'none';";
    add_header Content-Security-Policy $csp always;

    server_tokens off;
    client_max_body_size 10m;
    charset utf-8;
    keepalive_requests 100;

    # Compression settings
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
      application/atom+xml
      application/geo+json
      application/javascript
      application/x-javascript
      application/json
      application/ld+json
      application/manifest+json
      application/rdf+xml
      application/rss+xml
      application/xhtml+xml
      application/xml
      font/eot
      font/otf
      font/ttf
      image/svg+xml
      text/css
      text/javascript
      text/plain
      text/xml;

    # Serve static files
    location / {
      root /usr/share/nginx/html;
      try_files $uri $uri/ /index.html;
    }

    # Reverse proxy to backend
    location /api/ {
      proxy_pass http://backend;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Connection "";
      proxy_buffering on;
      proxy_buffer_size 128k;
      proxy_buffers 4 256k;
      proxy_busy_buffers_size 256k;
      proxy_connect_timeout 30s;
      proxy_send_timeout 30s;
      proxy_read_timeout 30s;
    }

    # Block access to sensitive files
    location ~ /\.(ht|git|env) {
      deny all;
      return 404;
    }
  }

  # Catch-all block - deny access to any hostname not explicitly allowed above
  server {
    listen 443 ssl default_server;
    server_name _;

    ssl_certificate /etc/nginx/certs/fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/privkey.pem;

    return 444; # Close connection without response for unmatched requests
  }
}
